rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() { return request.auth != null; }
    function isOwner(uid) { return isSignedIn() && request.auth.uid == uid; }
    function isAdmin() { return isSignedIn() && request.auth.token.admin == true; }

    match /users/{userId} {
      allow read: if true;
      allow write: if isOwner(userId) || isAdmin();
    }

    match /articles/{articleId} {
      allow read: if resource.data.is_published == true || isAdmin() || (isSignedIn() && resource.data.author_id == request.auth.uid);
      allow create: if isSignedIn();
      allow update, delete: if isAdmin() || (isSignedIn() && resource.data.author_id == request.auth.uid);
      match /comments/{commentId} {
        allow read: if true;
        allow create: if isSignedIn();
        allow delete: if isAdmin() || (isSignedIn() && resource.data.author_id == request.auth.uid);
      }
    }

    match /bookmarks/{bookmarkId} {
      allow read: if isOwner(resource.data.user_id) || isAdmin();
      allow create, delete: if isOwner(request.resource.data.user_id);
    }

    match /follows/{followId} {
      allow read: if true;
      allow write: if isSignedIn();
    }
  }
}
